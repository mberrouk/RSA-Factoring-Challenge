#!/usr/bin/python3

import sys
import math

def pollard_rho(n):
    def f(x):
        return (x**2 + 1) % n

    x = 2
    y = 2
    d = 1

    while d == 1:
        x = f(x)
        y = f(f(y))
        d = math.gcd(abs(x - y), n)

    if d == n:
        return None  # Failed to find a factor
    else:
        return d, n // d

if len(sys.argv) < 2:
    print("Usage: factors <file>", file=sys.stderr)
    exit(1)

with open(sys.argv[1], "r") as f:
        lines = f.readlines()
        for line in lines:
            nb = line.strip('\n')
            if int(nb) % 2 == 0:
                print("{:d}={:d}*{:d}".format(int(nb), int(int(nb) / 2), 2))
            else:
                factors = pollard_rho(int(nb))
                if factors is not None:
                    factor1, factor2 = factors
                    print(f"{nb}={factor2}*{factor1}")
                else:
                    n = 2
                    num = int(nb)
                    while n <= math.sqrt(num):
                        if not num % n:
                            print("{:d}={:d}*{:d}".format(int(nb), int(int(nb)
                                / n), n))
                            break
                        n += 1
